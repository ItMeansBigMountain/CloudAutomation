CREATING VPC &  INSTANCE
    created a VPC
    Created a subnet
    Created an IGW
    Created a route table
    Associated the table to the subnet
    Made a route for the internet traffic to the IGW
    Made a Access Control List
    Allowed all traffic in and out bound (ideally you'd want to restrict this to least privilege, but let's just open it up for this)
    Created a Security Group
    I think you can associate that with the subnet iirc
    Added rules to allow port 22 and port 80 traffic from all ipv4 sources
    Created my ec2 under my vpc and public subnet
    Attached my SG
    Told it to allocate a public ipv4 address
    
    Extra steps for website/file sharing:
    ssh in
    install httpd
    make an index.html under /var/www/html
    start the httpd service



____________________________________________________________________



AWS SSH <connect>
    make sure you have an instance with aws 
    create keys file.pem
    - ssh -i "KEYS.pem" USERNAME@<ip address>
    - ssh -i "oyama.pem" ubuntu@ec2-18-189-2-102.us-east-2.compute.amazonaws.com



AWS SSH <send files>
    Folder --> scp -i "oyama.pem" -r FOLDER_NAME admin@ec2-52-14-230-91.us-east-2.compute.amazonaws.com:~

    File --> scp -i "oyama.pem" FILE_NAME  admin@ec2-52-14-230-91.us-east-2.compute.amazonaws.com:~



____________________________________________________________________

CONFIGURE AWS CLI
    aws configure
    nano nano ~/.aws/credentials

ENCRYPT USING AWS KEY MANAGER SYSTEM
    search key management system in aws services
        'make a key'

    pip3 install aws-encryption-sdk-cli

    aws configure
        'add aws configuration details'

    export PATH=$PATH:/home/COMPUTER-USERNAME/.local/bin

    nano secret1.txt
        'create file'

    keyArn= 'FIND KEY ARN FROM AWS KMS DASHBOARD (remove quotes)' 
    
    aws-encryption-cli --encrypt
                          --input secret1.txt
                          --wrapping-keys key=$keyArn
                          --metadata-output ~/metadata
                          --encryption-context purpose=test
                          --commitment-policy require-encrypt-require-decrypt
                          --output ~/output/.





____________________________________________________________________




CLI

    START EC2 INSTANCE
        aws ec2 run-instances --key-name {KEYNAME} --instance-type t3.micro --image-id {AMIID} --user-data {USER_DATA_FILE_PATH} --security-group-ids {HTTPACCESS} --subnet-id {SUBNETID} --associate-public-ip-address --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=CLI__PRODUCED_IMAGE}]' --output text --query 'Instances[*].InstanceId'


    DECRIBE INFO OF INSTANCE
        aws ec2 describe-instances --instance-id {NEW-INSTANCE-ID} --query 'Reservations[0].Instances[0].NetworkInterfaces[0].Association.PublicDnsName'


    CREATE AMI (Amazon Machine Image)
        
